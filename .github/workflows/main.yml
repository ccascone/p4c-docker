# This is a basic workflow that is triggered periodically, building docker images for P4C

name: Build-P4C-Image

on: 
  schedule:
    - cron:  '0 0 * * 1' # start weekly at 00:00, every Monday

jobs:
      
  solve_env:
    runs-on: ubuntu-20.04
    steps:
      - id: solving_envs
        name: Solving envs
        run: |
          echo "::set-output name=LATEST_P4C_COMMIT::${{ env.LATEST_P4C_COMMIT }}"
          echo "::set-output name=MAKEFLAGS::${{ env.MAKEFLAGS }}"
          echo "::set-output name=STABLE_20210108_P4C_COMMIT::${{ env.STABLE_20210108_P4C_COMMIT }}"
          echo "::set-output name=STABLE_P4C_COMMIT::${{ env.STABLE_P4C_COMMIT }}"
          echo "::set-output name=DOCKER_REPO::${{ env.DOCKER_REPO }}"
        env:
          STABLE_P4C_COMMIT: e2934ab32ace8a877bf2b34704950a4da69b6202
          STABLE_20210108_P4C_COMMIT: 41b6968f8da2f611c69a0677e849c4e221152d04
          LATEST_P4C_COMMIT: "`wget -qO- http://api.github.com/repos/p4lang/p4c/commits/main | grep -m1 '\"sha\"' | cut -c11-19`"
          MAKEFLAGS: '-j2'
          DOCKER_REPO: "opennetworking/p4c"
    outputs:
      STABLE_P4C_COMMIT: ${{ steps.solving_envs.outputs.STABLE_P4C_COMMIT }}
      STABLE_20210108_P4C_COMMIT: ${{ steps.solving_envs.outputs.STABLE_20210108_P4C_COMMIT }}
      LATEST_P4C_COMMIT: ${{ steps.solving_envs.outputs.LATEST_P4C_COMMIT }}
      MAKEFLAGS: ${{ steps.solving_envs.outputs.MAKEFLAGS }}
      DOCKER_REPO: ${{ steps.solving_envs.outputs.DOCKER_REPO }}
        
        
  build_matrix:
    needs: solve_env
    runs-on: ubuntu-20.04 
    strategy:
      matrix:
          include:
          - TAGNAME: latest
            P4C_COMMIT: ${{ needs.solve_env.outputs.LATEST_P4C_COMMIT }}
            PROTOBUF_VERSION: 3.6.1
          - TAGNAME: stable
            P4C_COMMIT: ${{ needs.solve_env.outputs.STABLE_P4C_COMMIT }}
            PROTOBUF_VERSION: 3.2.0
          - TAGNAME: stable-20210108
            P4C_COMMIT: ${{ needs.solve_env.outputs.STABLE_20210108_P4C_COMMIT }}
            PROTOBUF_VERSION: 3.6.1
            
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v2
        
      - name: Before Install
        shell: bash
        id: before_install
        run: |
          echo "::set-output name=LOCAL_RUNTIME_IMAGE::p4c-${{ matrix.TAGNAME }}"
          echo "::set-output name=DOCKER_RUNTIME_IMAGE::${{ needs.solve_env.outputs.DOCKER_REPO }}:${{ matrix.TAGNAME }}"
       
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: "${{ steps.before_install.outputs.DOCKER_RUNTIME_IMAGE }}"
          tags: "${{ steps.before_install.outputs.LOCAL_RUNTIME_IMAGE }}"
          build-args: |
            "PROTOBUF_VERSION=${{ matrix.PROTOBUF_VERSION }}"
            "P4C_COMMIT=${{ matrix.P4C_COMMIT }}"
            "MAKEFLAGS=${{ needs.solve_env.outputs.MAKEFLAGS }}"
          target: "runtime"
